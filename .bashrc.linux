# .bashrc.linux

if [ ! -z "${BASH_SOURCE_DEBUG+x}" ]; then
  echo 'sourcing .bashrc.linux'
fi

alias lso='/bin/ls'
alias ls='lso -aF --color=auto'
alias ll='ls -l --time-style=long-iso'
alias lh='ll -h'

# apt-get purge old kernels
alias apt-get-purge-old-kernels='sudo apt-get purge $(dpkg -l linux-{headers,image,image-extra,tools}-"[0-9]*" | awk "/ii/{print $2}" | grep -ve "$(uname -r | sed -r 's/-[a-z]+//')" | tr -s " " | cut -d " " -f 2)'

# Conda
if [[ -f /home/gor/_conda_/bin/register-python-argcomplete ]]
then
	eval "$(/home/gor/_conda_/bin/register-python-argcomplete conda)"
fi
alias conda-activate='source /home/gor/_conda_/bin/activate'
alias conda-deactivate='source /home/gor/_conda_/bin/deactivate'

# Keychain
if command -v keychain >/dev/null 2>&1; then
	if [[ -f /home/gor/.ssh/id_ed25519 ]]; then
		eval `keychain --eval --quiet id_ed25519`
	fi
	if [[ -f /home/gor/.ssh/id_repo_ed25519 ]]; then
		eval `keychain --eval --quiet id_repo_ed25519`
	fi
	if [[ -f /home/gor/.ssh/id_rsa ]]; then
		eval `keychain --eval --quiet id_rsa`
	fi
	if [[ -f /home/gor/.ssh/id_github_rsa ]]; then
		eval `keychain --eval --quiet id_github_rsa`
	fi
	if [[ -f /home/gor/.ssh/id_gitlab_rsa ]]; then
		eval `keychain --eval --quiet id_gitlab_rsa`
	fi
fi

# Reload module 8812au
alias reload-module-8812au='sudo modprobe -r 8812au; sudo modprobe 8812au'

# Remove obsolete configuration files
alias remove-obsolete-kernel-configs='sudo dpkg --purge $(COLUMNS=200 dpkg -l "linux-*" | grep "^rc" | tr -s " " | cut -d " " -f 2)'
alias remove-all-obsolete-configs='sudo dpkg --purge $(COLUMNS=200 dpkg -l | grep "^rc" | tr -s " " | cut -d " " -f 2)'

# Ubuntu
open-default() {
	xdg-open ${@} &>/dev/null
}
export -f open-default

alias ubuntu-list-security-updates='apt-get -s upgrade | grep "^Inst" | grep -i security | awk -F " " {'"'"'print $2'"'"'}'
alias ubuntu-upgrade-security-updates='~/ubuntu-upgrade-security-updates.sh'

alias ubuntu-list-installed-kernels='apt list "linux-*" | perl -n -e'"'"'/^([^\/]+).*?\[(installed)?,?(automatic)?,?(auto-removable)?\]$/ && printf "%-37s [ %9s , %9s , %14s ]\n", $1, $2, $3, $4'"'"
alias ubuntu-list-kernel-residual-configs='apt list "linux-*" | grep residual-config | cut -d/ -f1 | tr "\n" " "'

alias ubuntu-list-packages-sources='apt-cache policy $(dpkg -l | awk '"'"'NR >= 6 { print $2 }'"'"') | awk '"'"'/^[^ ]/ { split($1, a, ":"); pkg = substr(a[1], 1, 24); arch = a[2] } nextline == 1 { nextline = 0; sub(/^https?:\/\//, "", $2); url = substr($2, 1, 44); printf("%-24s | %-5s | %-44s\n", pkg, arch, url) } /\*\*\*/ { nextline = 1 }'"'"

alias ubuntu-update-and-upgrade='sudo apt update && sudo apt upgrade'

alias ubuntu-format-auth-log='perl -n -e'"'"'/^([[:alpha:]]{3}[[:blank:]]+\d{1,2}[[:blank:]]+\d{2}:\d{2}:\d{2}) [[:graph:]]+ sudo:[[:blank:]]+([[:graph:]]+) : .*COMMAND=(.*)$/ && printf "%s | %-6.6s | %s\n", $1, $2, $3'"'"
alias ubuntu-format-sudo-log='perl -n -e'"'"'/^([[:alpha:]]{3} {1,2}\d{1,2} \d{2}:\d{2}):\d{2} \d{4} : ([a-z][-a-z0-9_]*) : HOST=[[:graph:]]+ :( user NOT in sudoers ;)? TTY=[[:graph:]]+ ; PWD=[[:graph:]]+ ; USER=[[:graph:]]+ ; COMMAND=(.*)$/ && printf "%s  %-6.6s %s %s\n", $1, $2, length $3 ? "!!" : "  ", $4'"'"
alias ubuntu-format-last='head -n -2 | tr -s " " | cut -d" " -f 3 | sort -n | uniq -c | sort -bnr'

# This command should add everyone to mldata group
# echo "yanliu san xinran dehua roseyu zche sungyong guangyu gor wcarvalho" | xargs -n 1 sudo usermod -a -G mldata

# Start VNC server
alias start-vnc-server='sudo systemctl start vnc-server@17.service'

# "Windows SubSystem for Linux" workarounds
if [[ -f /proc/version && $(</proc/version) == *Microsoft@Microsoft* ]]; then
	# Set correct umask
	# Microsoft/BashOnWindows#352
	if [[ "$(umask)" == '000' ]]; then
		umask 022
	fi

	# Prevent ZSH from changing the priority of the background processes with nice.
	# Microsoft/BashOnWindows#1887
	if [[ -n "${ZSH_VERSION}" ]]; then
		unsetopt BG_NICE
	fi

	# Go to home directory
	cd ~
fi

